helper_write: write data TO a helper
   maybe add new set of fds?
      bidirectional communication!

init_ltp:
   - add handler for ltp, which waits for 2003 ack
      - check exec_helper: return struct *helper?
         - caller needs to access the process (to send data)
            - bidirectional pipes?
         - read 4 bytes in tp_listen_read?
            - already coded that elsewhere!
   - helper->path: use as absolut path?
      - for re-init, on exit

tp_send.c
   how to handle send / trasport protocol?
      - pipe data to it, add pipe to handler array, leave function
      - when ack is replied, re-draw message?
         - would need to track outgoing packages
         - is needed for later versions anyway (think of resend)
      - create a queue of un-ack-ed packages?
         - not acked by transport protocol =>
            - same as not acked by next peer
         - not acked by final peer
            struct package {
               int id;        /* internal identifier        */
               int state;     /* NO_ACK, TP_ACK, FINAL_ACK  */
               char *dest;    /* who to send to             */
               char *msg;     /* plaintext message          */
            };
         - dest is the nick currently, but should be updated to a list later,
           to support groups:
            struct destination {
               struct peer *who;
               struct destination next;
            }
         - parse queue every $interval
            - to trigger resend
            - post-0.1 version

doc/EOF.tex:
   create readable document, so adding new stuff is possible

Currently: peer_send.c
   tp_send
   "Send message"

- encrypt message,
   send, = listen + send function
   decrypt message


   => /peer add vorher!
===>>>>>   /peer send <nick> <text>


- move transport protocols out of main!
- send message
   - encrypt message
      - retrieve keyid for nick

- create script to
   - generate public & private keys for
      - telmich
      - !eof
      - geof

- check:

valgrind -v --tool=memcheck --leak-check=yes --show-reachable=yes --num-callers=20 --track-fds=yes --leak-resolution=high --track-origins=yes  ./ceofhack

